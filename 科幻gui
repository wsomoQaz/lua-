-- Roblox 圆形悬浮窗控制面板完整脚本
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- 创建 ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "FloatingControlPanel"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

-- 创建主面板
local panel = Instance.new("Frame")
panel.Name = "MainPanel"
panel.Size = UDim2.new(0, 600, 0, 360)
panel.Position = UDim2.new(0.5, -300, 0.5, -180)
panel.AnchorPoint = Vector2.new(0.5, 0.5)
panel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
panel.BorderSizePixel = 0
panel.BackgroundTransparency = 0.05
panel.Visible = true
panel.Parent = gui

-- 主面板圆角
local corner = Instance.new("UICorner", panel)
corner.CornerRadius = UDim.new(0, 12)

-- 关闭按钮
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -40, 0, 10)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 16
closeBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeBtn.BorderSizePixel = 0
closeBtn.Parent = panel

local closeCorner = Instance.new("UICorner", closeBtn)
closeCorner.CornerRadius = UDim.new(1, 0)

-- 创建圆形按钮（悬浮窗按钮）
local circleBtn = Instance.new("TextButton")
circleBtn.Name = "CircleButton"
circleBtn.Size = UDim2.new(0, 80, 0, 80)
circleBtn.Position = UDim2.new(0.05, 0, 0.8, 0)
circleBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 180)
circleBtn.Text = "☢"
circleBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
circleBtn.TextSize = 32
circleBtn.Font = Enum.Font.GothamBold
circleBtn.Visible = false
circleBtn.ZIndex = 10
circleBtn.Parent = gui

local circleCorner = Instance.new("UICorner", circleBtn)
circleCorner.CornerRadius = UDim.new(1, 0)

-- 拖动功能实现
local dragging = false
local dragInput, dragStart, startPos
local function clamp(x, min, max)
	return math.clamp(x, min, max)
end

circleBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = circleBtn.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

circleBtn.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		local newPos = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
		circleBtn.Position = newPos
	end
end)

-- 点击关闭按钮，隐藏主面板，显示圆形按钮
closeBtn.MouseButton1Click:Connect(function()
	panel.Visible = false
	circleBtn.Visible = true
end)

-- 点击圆形按钮，展开面板
circleBtn.MouseButton1Click:Connect(function()
	panel.Visible = true
	circleBtn.Visible = false

	-- 弹出动画
	panel.Size = UDim2.new(0, 20, 0, 12)
	panel.Position = UDim2.new(0.5, -10, 0.5, -6)
	panel.BackgroundTransparency = 1

	local tweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
	local goal = {
		Size = UDim2.new(0, 600, 0, 360),
		Position = UDim2.new(0.5, -300, 0.5, -180),
		BackgroundTransparency = 0.05
	}
	local tween = TweenService:Create(panel, tweenInfo, goal)
	tween:Play()
end)